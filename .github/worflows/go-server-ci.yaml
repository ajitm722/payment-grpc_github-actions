name: Go CI  # Human-readable name of your workflow shown in the GitHub Actions UI

on:
  push:
    branches: [main]  # Trigger workflow when code is pushed to the 'main' branch
  pull_request:
    branches: [main]  # Also trigger when a PR is opened targeting 'main'

jobs:
  build-and-test:       # The job name (arbitrary but descriptive)
    runs-on: ubuntu-latest  # Run this job in a clean Ubuntu virtual machine (GitHub-hosted)

    steps:  # A sequence of shell steps executed on the runner

      - name: Checkout code
        uses: actions/checkout@v2
        # Downloads your repository source code into the runner's working directory

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23.0'  # Match this with the Go version in your go.mod

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: /go/pkg/mod
          # This is the Go module cache directory where dependencies are stored

          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          # This cache key is uniquely generated from:
          # - runner.os: e.g., ubuntu-latest
          # - go.sum hash: captures all dependencies' versions
          # If go.sum changes → cache key changes → fresh deps are downloaded

          restore-keys: |
            ${{ runner.os }}-go-
          # If exact key not found, fall back to any other Go cache for that OS

      - name: Install dependencies
        run: go mod tidy
        # Ensures go.mod and go.sum are in sync and all modules are fetched

      - name: Build server
        run: go build -v ./server
        # Compiles the server package

      - name: Build client
        run: go build -v ./client
        # Compiles the client package

      - name: Run unit tests
        run: go test -v ./server/...
        # Runs all test files recursively inside the server/ directory
