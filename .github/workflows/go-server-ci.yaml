# Name of the workflow
name: Go Server CI

# Trigger conditions for the workflow
on:
  # Allows manual triggering of the workflow
  workflow_dispatch:
  # Runs the workflow on push events to the main branch
  push:
    branches: [main]
  # Runs the workflow on pull request events targeting the main branch
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    # Specifies the runner environment
    runs-on: ubuntu-latest

    defaults:
      run:
        # Sets the working directory for all run steps
        working-directory: .

    steps:
      # Checks out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Sets up the Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          # Specifies the Go version to use
          go-version: '1.23.0'

      # Installs the protobuf compiler to avoid go.mod tidy errors
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      # Generates Go code from the protobuf file
      - name: Generate protobuf code
        run: |
          protoc --go_out=. --go-grpc_out=. proto/payment.proto

      # Adds a replace directive to go.mod
      - name: Add Go module replace
        run: |
          echo 'replace github.com/ajitm722/payment-grpc_github-actions => .' >> go.mod

      # Cleans up and verifies dependencies
      - name: Tidy modules
        run: go mod tidy

      # Builds the server application
      - name: Build server
        run: go build ./server

      # Builds the client application
      - name: Build client
        run: go build ./client

      # Runs tests for the server with verbose output and no caching
      - name: Run tests
        run: go test -v -count=1 ./server/...
